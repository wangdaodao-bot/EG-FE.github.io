(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{370:function(t,s,a){"use strict";a.r(s);var e=a(25),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"json数据传输标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json数据传输标准"}},[t._v("#")]),t._v(" JSON数据传输标准")]),t._v(" "),a("h2",{attrs:{id:"_1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1 简介")]),t._v(" "),a("p",[a("code",[t._v("JSON")]),t._v("(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 "),a("code",[t._v("ECMAScript")]),t._v(" (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 "),a("code",[t._v("JSON")]),t._v(" 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。")]),t._v(" "),a("h2",{attrs:{id:"_2-json数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-json数据类型"}},[t._v("#")]),t._v(" 2 JSON数据类型")]),t._v(" "),a("p",[t._v("包括了基本数据类型4种和复合数据类型2种，共6种数据类型。")]),t._v(" "),a("p",[t._v("传输的数据，包括对象属性以及数组成员， "),a("strong",[t._v("必须(MUST)")]),t._v(" 是 6 种 "),a("code",[t._v("JSON")]),t._v(" 数据类型之一。 "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 使用"),a("code",[t._v("function")]),t._v("、"),a("code",[t._v("Date")]),t._v("等 "),a("code",[t._v("js")]),t._v(" 对象类型。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本数据类型"}},[t._v("#")]),t._v(" 2.1 基本数据类型")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Number")]),t._v("可以表示整数和浮点数。")]),t._v(" "),a("li",[a("code",[t._v("Boolean")]),t._v(" 可以表示真假，值为 "),a("code",[t._v("true")]),t._v(" 或 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("String")]),t._v(" 表示一个字符串。")]),t._v(" "),a("li",[a("code",[t._v("Null")]),t._v(" 通常用于表示空对象。")])]),t._v(" "),a("p",[a("code",[t._v('"true"')]),t._v(" 和 "),a("code",[t._v("true")]),t._v("，这两个数据代表的是不同的数据类型。非字符串类型数据输出时一定 "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 为两端加上双引号，否则可能产生不希望的后果（如"),a("code",[t._v("if")]),t._v("中判断"),a("code",[t._v('"false"')]),t._v("的结果是"),a("code",[t._v("true")]),t._v("）。其他容易产生错误的例子如："),a("code",[t._v("0")]),t._v("和"),a("code",[t._v('"0"')]),t._v("等。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-复合数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-复合数据类型"}},[t._v("#")]),t._v(" 2.2 复合数据类型")]),t._v(" "),a("p",[a("code",[t._v("Object")]),t._v(" 是无序的集合，以键值对的方式保持数据。一个 "),a("code",[t._v("Object")]),t._v("中包含零到多个 "),a("code",[t._v("name/value")]),t._v("的数据，数据间以逗号("),a("code",[t._v(",")]),t._v(")分隔。"),a("code",[t._v("name")]),t._v(" 为 "),a("code",[t._v("String")]),t._v("类型，"),a("code",[t._v("value")]),t._v(" 可以是任意类型的数据。")]),t._v(" "),a("p",[a("code",[t._v("Object")]),t._v(" 的最后一个元素之后一定 "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 加上分隔符的逗号，否则可能导致解析出错。")]),t._v(" "),a("p",[a("code",[t._v("Array")]),t._v(" (数组)为多个值的有序集合，数组元素间以逗号("),a("code",[t._v(",")]),t._v(")分隔。")]),t._v(" "),a("h2",{attrs:{id:"_3-http响应头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http响应头"}},[t._v("#")]),t._v(" 3 http响应头")]),t._v(" "),a("h3",{attrs:{id:"_3-1-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-status"}},[t._v("#")]),t._v(" 3.1 status")]),t._v(" "),a("p",[a("code",[t._v("http")]),t._v(" 响应的"),a("code",[t._v("status")]),t._v(" "),a("strong",[t._v("必须(MUST)")]),t._v(" 为 "),a("code",[t._v("200")]),t._v("。通常 "),a("code",[t._v("JSON")]),t._v(" 数据被用于通过 "),a("code",[t._v("XMLHttpRequest")]),t._v(" 对象访问，通过 "),a("code",[t._v("javascript")]),t._v(" 进行处理。返回错误的状态码可能导致错误不被响应，数据不被处理。")]),t._v(" "),a("ul",[a("li",[t._v("200：代表请求成功，并不代表业务成功，不能作为检查点来设置；")]),t._v(" "),a("li",[t._v("302：重定向，一般用浏览器或者"),a("code",[t._v("http")]),t._v("工具请求没问题，用"),a("code",[t._v("HttpClient")]),t._v("请求需要处理；")]),t._v(" "),a("li",[t._v("304：请求了一次，本地已经缓存了，再次请求，就会返回"),a("code",[t._v("304")]),t._v("，一般是页面在本地加"),a("code",[t._v("catch")]),t._v("了；")]),t._v(" "),a("li",[t._v("400：参数错误：漏传参数；")]),t._v(" "),a("li",[t._v("404：路径找不到、服务启动时报错；")]),t._v(" "),a("li",[t._v("405：请求方法错误；"),a("code",[t._v("get")]),t._v("、"),a("code",[t._v("post")]),t._v("；")]),t._v(" "),a("li",[t._v("415：媒体（数据）类型不一致，这个问题主要就是"),a("code",[t._v("content-type")]),t._v("的问题；")]),t._v(" "),a("li",[t._v("500：服务器内部错误，代码运行过程中抛出异常了，并且该异常没有被捕获；")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-content-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-content-type"}},[t._v("#")]),t._v(" 3.2 Content-Type")]),t._v(" "),a("p",[a("code",[t._v("Content-Type")]),t._v(" 字段定义了响应体的类型。一般情况下，浏览器会根据该类型对内容进行正确的处理。对于传输 "),a("code",[t._v("JSON")]),t._v(" 数据的响应，"),a("code",[t._v("Content-Type")]),t._v(" "),a("em",[t._v("推荐(RECOMMENDED)")]),t._v(" 设置为 "),a("code",[t._v("text/javascript")]),t._v(" 或 "),a("code",[t._v("text/plain")]),t._v(" 。 "),a("em",[t._v("避免(MUST NOT)")]),t._v(" 将 "),a("code",[t._v("Context-Type")]),t._v(" 设置为 "),a("code",[t._v("text/html")]),t._v("，否则可能导致安全问题。")]),t._v(" "),a("p",[a("code",[t._v("Content-Type")]),t._v(" 中可以指定字符集。通常 "),a("em",[t._v("需要(SHOULD)")]),t._v(" 明确指定一个字符集。如果是通过 "),a("code",[t._v("XMLHTTPRequest")]),t._v(" 请求的数据，并且字符编码为 "),a("code",[t._v("UTF-8")]),t._v(" 时，可以不指定字符集。")]),t._v(" "),a("p",[a("code",[t._v("Context-Type")]),t._v(" 示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("text/javascript;charset=UTF-8\n")])])]),a("h2",{attrs:{id:"_4-数据字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据字段"}},[t._v("#")]),t._v(" 4 数据字段")]),t._v(" "),a("p",[t._v("返回的数据包含在 "),a("code",[t._v("http")]),t._v(" 响应体中。数据 "),a("strong",[t._v("必须(MUST)")]),t._v(" 是一个 "),a("code",[t._v("JSON Object")]),t._v(" 。该 "),a("code",[t._v("Object")]),t._v(" 可能包含3个字段："),a("code",[t._v("code")]),t._v(" ，"),a("code",[t._v("message")]),t._v(" ，"),a("code",[t._v("data")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_4-1-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-code"}},[t._v("#")]),t._v(" 4.1 code")]),t._v(" "),a("p",[a("code",[t._v("code")]),t._v(" 字段 "),a("strong",[t._v("必须(MUST)")]),t._v(" 是一个不小于 "),a("code",[t._v("0")]),t._v(" 的 "),a("code",[t._v("JSON Number")]),t._v(" 整数，表示请求的状态。这个字段 "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 省略。")]),t._v(" "),a("h4",{attrs:{id:"一个成功请求的code字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个成功请求的code字段"}},[t._v("#")]),t._v(" 一个成功请求的code字段")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-2-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-message"}},[t._v("#")]),t._v(" 4.2 message")]),t._v(" "),a("p",[a("code",[t._v("message")]),t._v(" 字段 "),a("em",[t._v("通常(SHOULD)")]),t._v(" 是一个 "),a("code",[t._v("JSON String")]),t._v(" 或 "),a("code",[t._v("JSON Object")]),t._v(" ，表示除了请求状态外 "),a("code",[t._v("server")]),t._v(" 端想要对 "),a("code",[t._v("status")]),t._v(" 做出的说明，使 "),a("code",[t._v("client")]),t._v(" 端能够获取更多信息进行后续处理。这个字段是 "),a("em",[t._v("可选的(OPTIONAL)")]),t._v(" 。下面的两个例子中，"),a("code",[t._v("message")]),t._v(" 字段的信息都可以用于 "),a("code",[t._v("client")]),t._v(" 端程序的后续处理，但是粒度和处理方式会有不同。")]),t._v(" "),a("h4",{attrs:{id:"client端参数错误的message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client端参数错误的message"}},[t._v("#")]),t._v(" client端参数错误的message")]),t._v(" "),a("p",[t._v("简单说明的 "),a("code",[t._v("message")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"无权限"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-3-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-data"}},[t._v("#")]),t._v(" 4.3 data")]),t._v(" "),a("p",[a("code",[t._v("data")]),t._v(" 字段可以是除 "),a("code",[t._v("JSON Null")]),t._v(" 之外的任意 "),a("code",[t._v("JSON")]),t._v(" 类型，表示请求返回的数据主体。这个字段是 "),a("em",[t._v("可选的(OPTIONAL)")]),t._v(" 。数据主体 "),a("code",[t._v("data")]),t._v(" 包含了在请求成功时有意义的数据。")]),t._v(" "),a("h4",{attrs:{id:"一个查询姓名请求的返回数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个查询姓名请求的返回数据"}},[t._v("#")]),t._v(" 一个查询姓名请求的返回数据")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lily"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-数据场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据场景"}},[t._v("#")]),t._v(" 5 数据场景")]),t._v(" "),a("p",[t._v("本章为常见数据场景定义了通用的标准数据格式，用于数据传输和使用。")]),t._v(" "),a("h3",{attrs:{id:"_5-1-日期类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-日期类型"}},[t._v("#")]),t._v(" 5.1 日期类型")]),t._v(" "),a("p",[t._v("日期类型不属于 "),a("code",[t._v("JSON")]),t._v(" 数据类型。对于日期类型，我们 "),a("strong",[t._v("必须(MUST)")]),t._v(" 使用 "),a("code",[t._v("JSON String")]),t._v(" 来表示。为了让日期能够更容易的被显示和被解析，对于日期我们 "),a("em",[t._v("应当(SHOULD)")]),t._v(" 使用更适合 "),a("code",[t._v("internet")]),t._v(" 的格式，遵循rfc3339。")]),t._v(" "),a("h4",{attrs:{id:"数据场景：日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：日期"}},[t._v("#")]),t._v(" 数据场景：日期")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2010-10-10"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-2-记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-记录"}},[t._v("#")]),t._v(" 5.2 记录")]),t._v(" "),a("p",[t._v("记录代表二维表中的一行，通常用于表示某个具体事务抽象的属性。")]),t._v(" "),a("h4",{attrs:{id:"数据场景：记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：记录"}},[t._v("#")]),t._v(" 数据场景：记录")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"erik"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-3-二维表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-二维表"}},[t._v("#")]),t._v(" 5.3 二维表")]),t._v(" "),a("p",[t._v("标准二维表数据 "),a("strong",[t._v("必须(MUST)")]),t._v(" 以一维 "),a("code",[t._v("JSON Array")]),t._v(" 形式表示，"),a("code",[t._v("JSON Array")]),t._v(" 中每一项是一个 "),a("code",[t._v("JSON Object")]),t._v("，代表一条记录。"),a("code",[t._v("JSON Object")]),t._v(" 的每个成员代表一个字段。")]),t._v(" "),a("h4",{attrs:{id:"数据场景：标准二维表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：标准二维表"}},[t._v("#")]),t._v(" 数据场景：标准二维表")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"erik"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("251")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"欧阳先伟"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-4-数据页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-数据页"}},[t._v("#")]),t._v(" 5.4 数据页")]),t._v(" "),a("p",[t._v("数据页是列表数据常用的数据方式，可能通过查询或翻页获得数据。数据页是二维表数据的包装，包含列表数据本身更多的信息。")]),t._v(" "),a("p",[t._v("数据页 "),a("strong",[t._v("必须(MUST)")]),t._v(" 是一个 "),a("code",[t._v("JSON Object")]),t._v("，其中 "),a("strong",[t._v("必须(MUST)")]),t._v(" 包含的属性为 "),a("code",[t._v("data")]),t._v("。"),a("code",[t._v("data")]),t._v("是一个二维表。数据页可以包括一些 "),a("em",[t._v("可选(OPTIONAL)")]),t._v(" 的属性，表示当前数据页的信息。下表列举了数据页的可选属性。")]),t._v(" "),a("h4",{attrs:{id:"数据页可选属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据页可选属性"}},[t._v("#")]),t._v(" 数据页可选属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{Number} page")]),t._v(" - 当前页码，计数 "),a("strong",[t._v("必须(MUST)")]),t._v(" 为不小于0的整数，从0开始。")]),t._v(" "),a("li",[a("code",[t._v("{Number} pageSize")]),t._v(" - 每页显示条数， "),a("strong",[t._v("必须(MUST)")]),t._v(" 大于0。")]),t._v(" "),a("li",[a("code",[t._v("{Number} total")]),t._v(" - 列表总记录数， "),a("strong",[t._v("必须(MUST)")]),t._v(" 为不小于0的整数。表示当前条件下所有记录的数目，非本页的记录数。")]),t._v(" "),a("li",[a("code",[t._v("{String} orderBy")]),t._v(" - 列表排序规则。多个排序规则之间以逗号分割（"),a("code",[t._v(",")]),t._v("）；正序或倒序以"),a("code",[t._v("asc")]),t._v("或"),a("code",[t._v("desc")]),t._v("表示，与字段名之间以一个空格间隔。")]),t._v(" "),a("li",[a("code",[t._v("{String} keyword")]),t._v(" - 列表所属的搜索关键字。")]),t._v(" "),a("li",[a("code",[t._v("{Object} condition")]),t._v(" - 列表所属的搜索条件集合。属性中可以包含或不包含"),a("code",[t._v("keyword")]),t._v("字段，如果不包含， "),a("em",[t._v("建议(RECOMMMANDED)")]),t._v(" 在解析的时候附加搜索关键字"),a("code",[t._v("keyword")]),t._v("条件。")])]),t._v(" "),a("h4",{attrs:{id:"数据场景：数据页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：数据页"}},[t._v("#")]),t._v(" 数据场景：数据页")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"page"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pageSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"keyword"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"erik"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("251")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"欧阳先伟"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-5-键-值对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-键-值对象"}},[t._v("#")]),t._v(" 5.5 键/值对象")]),t._v(" "),a("p",[t._v("对于在一个"),a("code",[t._v("JSON Object")]),t._v("中表示键/值：")]),t._v(" "),a("ul",[a("li",[t._v("键的属性名 "),a("strong",[t._v("必须(MUST)")]),t._v(" 为"),a("code",[t._v("name")]),t._v("， "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 使用 "),a("code",[t._v("key")]),t._v(" 或 "),a("code",[t._v("k")])]),t._v(" "),a("li",[t._v("值的属性名 "),a("strong",[t._v("必须(MUST)")]),t._v(" 为"),a("code",[t._v("value")]),t._v("， "),a("strong",[t._v("不要(MUST NOT)")]),t._v(" 使用"),a("code",[t._v("v")]),t._v("。")])]),t._v(" "),a("h4",{attrs:{id:"数据场景：键-值对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：键-值对象"}},[t._v("#")]),t._v(" 数据场景：键/值对象")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BMW"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-6-键-值有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-键-值有序集合"}},[t._v("#")]),t._v(" 5.6 键/值有序集合")]),t._v(" "),a("p",[t._v("键/值有序集合表示对事务或逻辑类型的抽象与分类。常见的应用场景有单选复选框集合，下拉菜单等。")]),t._v(" "),a("p",[t._v("标准的键/值有序集合是一个"),a("code",[t._v("JSON Array")]),t._v("，集合中的每一项是一个"),a("code",[t._v("JSON Object")]),t._v("。项 "),a("strong",[t._v("必须(MUST)")]),t._v(" 包含"),a("code",[t._v("name")]),t._v("和"),a("code",[t._v("value")]),t._v("属性。 "),a("em",[t._v("可以(MAY)")]),t._v(" 通过其他的属性修饰每一项的特殊信息，如"),a("code",[t._v("selected")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"数据场景：键-值有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景：键-值有序集合"}},[t._v("#")]),t._v(" 数据场景：键/值有序集合")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BMW"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Benz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"selected"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-7-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-树"}},[t._v("#")]),t._v(" 5.7 树")]),t._v(" "),a("p",[t._v("树形数据用于表示层叠的数据结构。树型数据 "),a("strong",[t._v("必须(MUST)")]),t._v(" 是一个"),a("code",[t._v("JSON Object")]),t._v("，代表树型数据的根节点。下面是标准定义的可选节点列表，不在列表中的属性 "),a("em",[t._v("可以(SHOULD)")]),t._v(" 自行扩展。")]),t._v(" "),a("h4",{attrs:{id:"_5-7-1-树型数据结构的可选节点属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-树型数据结构的可选节点属性"}},[t._v("#")]),t._v(" 5.7.1 树型数据结构的可选节点属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{Number|String} id")]),t._v(" - 节点的唯一标识。")]),t._v(" "),a("li",[a("code",[t._v("{String} text")]),t._v(" - 名称或用于显示的字符串。")]),t._v(" "),a("li",[a("code",[t._v("{Array} children")]),t._v(" - 子节点列表。")])]),t._v(" "),a("h4",{attrs:{id:"_5-7-2-数据场景：树型数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-2-数据场景：树型数据"}},[t._v("#")]),t._v(" 5.7.2 数据场景：树型数据")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"中国"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"东城区"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"西城区"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"海淀区"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                ......\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"海南"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"children"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"海口"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("601")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"三亚"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("602")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"五指山"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                ......\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        ......\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);